import java.util.Scanner;
import  java.math.*;
public class Lqmingma {

        public static void main(String[] args) {
            int array[]=new int[]{4,0,4,0,4,0,4,32,-1,-16,4,32,4,32,4,32,4,32,4,32,8,32,8,32,16,34,16,34,32,30,-64,0,
                    16,64,16,64,34,68,127,126,66,-124,67,4,66,4,66,-124,126,100,66,36,66,4,66,4,66,4,126,4,66,40,0,16,
                    4,0,4,0,4,0,4,32,-1,-16,4,32,4,32,4,32,4,32,4,32,8,32,8,32,16,34,16,34,32,30,-64,0,
                    0,-128,64,-128,48,-128,17,8,1,-4,2,8,8,80,16,64,32,64,-32,64,32,-96,32,-96,33,16,34,8,36,14,40,4,
                    4,0,3,0,1,0,0,4,-1,-2,4,0,4,16,7,-8,4,16,4,16,4,16,8,16,8,16,16,16,32,-96,64,64,
                    16,64,20,72,62,-4,73,32,5,16,1,0,63,-8,1,0,-1,-2,0,64,0,80,63,-8,8,64,4,64,1,64,0,-128,
                    0,16,63,-8,1,0,1,0,1,0,1,4,-1,-2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,5,0,2,0,
                    2,0,2,0,7,-16,8,32,24,64,37,-128,2,-128,12,-128,113,-4,2,8,12,16,18,32,33,-64,1,0,14,0,112,0,
                    1,0,1,0,1,0,9,32,9,16,17,12,17,4,33,16,65,16,1,32,1,64,0,-128,1,0,2,0,12,0,112,0,
                    0,0,0,0,7,-16,24,24,48,12,56,12,0,56,0,-32,0,-64,0,-128,0,0,0,0,1,-128,3,-64,1,-128,0,0};

            for(int i=0; i < array.length; i++) {
                String bin;
                if(array[i] < 0){	//负数
                    bin = Integer.toBinaryString(array[i]).substring(24);	//负数的补码形式有32位，前24位都是1，只保留后8位即可
                }else{	//正数和0
                    bin = Integer.toBinaryString(array[i]);
                    //不足8位就补零
                    int bitNum = 8;
                    while(bin.length() < bitNum){
                        bin = "0"+bin;
                    }
                }
                System.out.print(bin);
                if(i%2 != 0) System.out.println();//换行
            }
        }
//    @SuppressWarnings({"all"})
//        public static void main(String[] args) {
//
//            Scanner scan = new Scanner(System.in);
//            int[] array = new int[]{4, 0, 4, 0, 4, 0, 4, 32, -1, -16, 4, 32, 4, 32, 4, 32, 4, 32, 4, 32, 8, 32, 8, 32, 16, 34, 16, 34, 32, 30, -64, 0,
//                    16, 64, 16, 64, 34, 68, 127, 126, 66, -124, 67, 4, 66, 4, 66, -124, 126, 100, 66, 36, 66, 4, 66, 4, 66, 4, 126, 4, 66, 40, 0, 16,
//                    4, 0, 4, 0, 4, 0, 4, 32, -1, -16, 4, 32, 4, 32, 4, 32, 4, 32, 4, 32, 8, 32, 8, 32, 16, 34, 16, 34, 32, 30, -64, 0,
//                    0, -128, 64, -128, 48, -128, 17, 8, 1, -4, 2, 8, 8, 80, 16, 64, 32, 64, -32, 64, 32, -96, 32, -96, 33, 16, 34, 8, 36, 14, 40, 4,
//                    4, 0, 3, 0, 1, 0, 0, 4, -1, -2, 4, 0, 4, 16, 7, -8, 4, 16, 4, 16, 4, 16, 8, 16, 8, 16, 16, 16, 32, -96, 64, 64,
//                    16, 64, 20, 72, 62, -4, 73, 32, 5, 16, 1, 0, 63, -8, 1, 0, -1, -2, 0, 64, 0, 80, 63, -8, 8, 64, 4, 64, 1, 64, 0, -128,
//                    0, 16, 63, -8, 1, 0, 1, 0, 1, 0, 1, 4, -1, -2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 5, 0, 2, 0,
//                    2, 0, 2, 0, 7, -16, 8, 32, 24, 64, 37, -128, 2, -128, 12, -128, 113, -4, 2, 8, 12, 16, 18, 32, 33, -64, 1, 0, 14, 0, 112, 0,
//                    1, 0, 1, 0, 1, 0, 9, 32, 9, 16, 17, 12, 17, 4, 33, 16, 65, 16, 1, 32, 1, 64, 0, -128, 1, 0, 2, 0, 12, 0, 112, 0,
//                    0, 0, 0, 0, 7, -16, 24, 24, 48, 12, 56, 12, 0, 56, 0, -32, 0, -64, 0, -128, 0, 0, 0, 0, 1, -128, 3, -64, 1, -128, 0, 0};
//            for (int i = 0; i < array.length; i++) {
//                String bin = Integer.toBinaryString(array[i]);  //将数组数据转换成二进制
//                if (array[i] < 0) {  //小于0
//                    bin = bin.substring(24); //从24位开始截取
//                } else {
//                    int j = 0;
//                    String sr = bin;
//                    //前面补0操作
//                    while (j < 8) {
//                        if (sr.length() < 8) {
//                            sr = "0" + sr;
//                        }
//                        j++;
//                    }
//                    bin = sr;
//                }
//                //如果是1可能看不出来，我们转换成*号
//                for (int j = 0; j < bin.length(); j++) {
//                    if (Integer.parseInt(bin.charAt(j)+"") == 1){  //+""为了将chart类型转换成string类型
//                        System.out.print("*"+" ");
//                    }else{
//                        System.out.print(" ");
//                    }
//                }
////            System.out.print(bin);
//                if (i % 2 != 0) {
//                    System.out.println();  //每两个数我们换行
//                }
//            }
//            scan.close();
//        }

    }
